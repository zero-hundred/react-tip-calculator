{"ast":null,"code":"var _jsxFileName = \"/Users/kilgamesh/Desktop/react-tip-calculator/src/components/percentBtns/PercentBtns.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useContext } from 'react';\nimport PercentBtn from './PercentBtn';\nimport CalculatorContext from '../../context/CalculatorContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PercentBtns = () => {\n  _s();\n\n  const calculatorContext = useContext(CalculatorContext);\n  const customInput = useRef(null);\n\n  function checkFocus() {\n    customInput.current.checked = true;\n  }\n\n  const {\n    handleTip\n  } = calculatorContext;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bill_buttons\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"smallHeader bill\",\n      children: \"Select Tip %\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_tipBtns\",\n      children: [/*#__PURE__*/_jsxDEV(PercentBtn, {\n        iD: \"five\",\n        value: 5,\n        handleTip: handleTip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PercentBtn, {\n        iD: \"ten\",\n        value: 10,\n        handleTip: handleTip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PercentBtn, {\n        iD: \"fifteen\",\n        value: 15,\n        handleTip: handleTip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PercentBtn, {\n        iD: \"twenty-five\",\n        value: 25,\n        handleTip: handleTip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PercentBtn, {\n        iD: \"fifty\",\n        value: 50,\n        handleTip: handleTip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        ref: customInput,\n        id: \"custom\",\n        name: \"tipCalc\",\n        className: \"radio_input custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"custom\",\n        className: \"radio_label custom\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onClick: e => checkFocus(e),\n          onChange: e => handleTip(e),\n          placeholder: \"Custom\",\n          name: \"tipCalc\",\n          className: \"text_input\",\n          id: \"customTip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PercentBtns, \"Pzh+buyCr4Z00NZvs0ceCqN2Bc0=\");\n\n_c = PercentBtns;\nexport default PercentBtns;\n\nvar _c;\n\n$RefreshReg$(_c, \"PercentBtns\");","map":{"version":3,"sources":["/Users/kilgamesh/Desktop/react-tip-calculator/src/components/percentBtns/PercentBtns.js"],"names":["useRef","useContext","PercentBtn","CalculatorContext","PercentBtns","calculatorContext","customInput","checkFocus","current","checked","handleTip","e"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,UAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,iBAAiB,GAAGJ,UAAU,CAACE,iBAAD,CAApC;AAEA,QAAMG,WAAW,GAAGN,MAAM,CAAC,IAAD,CAA1B;;AACA,WAASO,UAAT,GAAsB;AACpBD,IAAAA,WAAW,CAACE,OAAZ,CAAoBC,OAApB,GAA8B,IAA9B;AACD;;AACD,QAAM;AAACC,IAAAA;AAAD,MAAcL,iBAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACA,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE,CAA7B;AAAgC,QAAA,SAAS,EAAEK;AAA3C;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAE,EAA5B;AAAgC,QAAA,SAAS,EAAEA;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAE,EAAhC;AAAoC,QAAA,SAAS,EAAEA;AAA/C;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE,EAApC;AAAwC,QAAA,SAAS,EAAEA;AAAnD;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAE,EAA9B;AAAkC,QAAA,SAAS,EAAEA;AAA7C;AAAA;AAAA;AAAA;AAAA,cALA,eAQA;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,GAAG,EAAEJ,WAAzB;AAAsC,QAAA,EAAE,EAAC,QAAzC;AAAkD,QAAA,IAAI,EAAC,SAAvD;AAAiE,QAAA,SAAS,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,cARA,eASA;AAAO,QAAA,OAAO,EAAC,QAAf;AAAwB,QAAA,SAAS,EAAC,oBAAlC;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,OAAO,EAAEK,CAAC,IAAIJ,UAAU,CAACI,CAAD,CAA3C;AAAgD,UAAA,QAAQ,EAAEA,CAAC,IAAID,SAAS,CAACC,CAAD,CAAxE;AAA6E,UAAA,WAAW,EAAC,QAAzF;AAAkG,UAAA,IAAI,EAAC,SAAvG;AAAiH,UAAA,SAAS,EAAC,YAA3H;AAAwI,UAAA,EAAE,EAAC;AAA3I;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA7BD;;GAAMP,W;;KAAAA,W;AA+BN,eAAeA,WAAf","sourcesContent":["import {useRef, useContext} from 'react';\nimport PercentBtn from './PercentBtn';\nimport CalculatorContext from '../../context/CalculatorContext';\nconst PercentBtns = () => {\n  const calculatorContext = useContext(CalculatorContext);\n\n  const customInput = useRef(null);\n  function checkFocus() {\n    customInput.current.checked = true;\n  }\n  const {handleTip} = calculatorContext;\n\n  return (\n    <div className=\"bill_buttons\">\n        <h2 className=\"smallHeader bill\">Select Tip %</h2>\n\n    {/* Tip Input & Labels container */}\n        <div className=\"container_tipBtns\">\n        <PercentBtn iD=\"five\" value={5} handleTip={handleTip} />\n        <PercentBtn iD=\"ten\" value={10} handleTip={handleTip} />\n        <PercentBtn iD=\"fifteen\" value={15} handleTip={handleTip} />\n        <PercentBtn iD=\"twenty-five\" value={25} handleTip={handleTip} />\n        <PercentBtn iD=\"fifty\" value={50} handleTip={handleTip} />\n\n    {/* Custom Tip container */}\n        <input type=\"radio\" ref={customInput} id=\"custom\" name=\"tipCalc\" className=\"radio_input custom\"></input>\n        <label htmlFor=\"custom\" className=\"radio_label custom\">\n            <input type=\"text\" onClick={e => checkFocus(e)} onChange={e => handleTip(e)} placeholder=\"Custom\" name=\"tipCalc\" className=\"text_input\" id=\"customTip\"/>\n        </label>\n        </div>\n    </div>\n  )\n}\n\nexport default PercentBtns"]},"metadata":{},"sourceType":"module"}