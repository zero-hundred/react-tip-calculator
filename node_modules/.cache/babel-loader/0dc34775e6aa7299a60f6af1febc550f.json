{"ast":null,"code":"var _jsxFileName = \"/Users/kilgamesh/Desktop/react-tip-calculator/src/context/CalculatorState.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport { SET_TOTAL_PER, SET_TOTAL_TIP, SET_TIP_PER, SET_PEOPLE_NUM, SET_START_PRICE, SET_NO_PEOPLE, SET_ALL_EMPTY } from './types';\nimport CalculatorContext from './CalculatorContext';\nimport CalculatorReducer from './CalculatorReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalculatorState = props => {\n  _s();\n\n  const initStates = {\n    totalEach: 0,\n    tipEach: 0,\n    tipPercent: 0,\n    people: null,\n    startPrice: null,\n    isEmpty: true,\n    noPeople: null\n  };\n  const [state, dispatch] = useReducer(CalculatorReducer, initStates);\n\n  function setNoPeople(setBool) {\n    dispatch({\n      type: SET_NO_PEOPLE,\n      payload: setBool\n    });\n  }\n\n  function setTotalEach(totalEach) {\n    dispatch({\n      type: SET_TOTAL_PER,\n      payload: totalEach\n    });\n  }\n\n  function setTipPercent(percent) {\n    dispatch({\n      type: SET_TOTAL_TIP,\n      payload: percent\n    });\n  }\n\n  function setTipEach(tipEach) {\n    dispatch({\n      type: SET_TIP_PER,\n      payload: tipEach\n    });\n  }\n\n  function setEmpty(setBool) {\n    dispatch({\n      type: SET_ALL_EMPTY,\n      payload: setBool\n    });\n  }\n\n  function setPeople(newPeople) {\n    if (newPeople > 0) {\n      setNoPeople(false);\n    }\n\n    dispatch({\n      type: SET_PEOPLE_NUM,\n      payload: newPeople\n    });\n  }\n\n  function setStartPrice(price) {\n    dispatch({\n      type: SET_START_PRICE,\n      payload: price\n    });\n  } // Checks people state\n\n\n  function checkError() {\n    if (state.people === null) {\n      setNoPeople(null);\n    } else if (state.people <= 0) {\n      setNoPeople(true);\n    } else {\n      setNoPeople(false);\n    }\n  } // Checks is form is filled\n  // If form filled \n\n\n  function checkForm() {\n    if (state.people !== '' && state.people > 0 && state.startPrice !== '' && state.startPrice > 0 && state.tipPercent > 0) {\n      // Generates total $ per person\n      var totalPer = (state.startPrice * Number(state.tipPercent / 100) + state.startPrice) / state.people;\n      setTotalEach(totalPer); // Generates tip $ per person\n\n      var tipEach = state.startPrice * Number(state.tipPercent / 100) / state.people;\n      setTipEach(tipEach);\n    }\n  }\n\n  function handleTipPercent(event) {\n    setTipPercent(event.target.value);\n    checkForm();\n    setEmpty(false);\n  }\n\n  function handlePeople(e) {\n    setPeople(Number(e.target.value));\n    setEmpty(false);\n    checkError();\n    checkForm();\n  }\n\n  function handleStartPrice(e) {\n    setStartPrice(Number(e.target.value));\n    setEmpty(false);\n    checkForm();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CalculatorContext.Provider, {\n    value: {\n      totalEach: state.totalEach,\n      tipEach: state.tipEach,\n      tipPercent: state.tipPercent,\n      people: state.people,\n      startPrice: state.startPrice,\n      isEmpty: state.isEmpty,\n      setTipPercent: state.setTipPercent,\n      noPeople: state.noPeople,\n      handleTipPercent: handleTipPercent,\n      handlePeople: handlePeople,\n      handleStartPrice: handleStartPrice,\n      checkForm: checkForm,\n      checkError: checkError\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalculatorState, \"mGuVWAKKnw6oP9VfaZJL6ikYUqs=\");\n\n_c = CalculatorState;\nexport default CalculatorState;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculatorState\");","map":{"version":3,"sources":["/Users/kilgamesh/Desktop/react-tip-calculator/src/context/CalculatorState.js"],"names":["useReducer","SET_TOTAL_PER","SET_TOTAL_TIP","SET_TIP_PER","SET_PEOPLE_NUM","SET_START_PRICE","SET_NO_PEOPLE","SET_ALL_EMPTY","CalculatorContext","CalculatorReducer","CalculatorState","props","initStates","totalEach","tipEach","tipPercent","people","startPrice","isEmpty","noPeople","state","dispatch","setNoPeople","setBool","type","payload","setTotalEach","setTipPercent","percent","setTipEach","setEmpty","setPeople","newPeople","setStartPrice","price","checkError","checkForm","totalPer","Number","handleTipPercent","event","target","value","handlePeople","e","handleStartPrice","children"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\nimport {\nSET_TOTAL_PER,SET_TOTAL_TIP,SET_TIP_PER,\nSET_PEOPLE_NUM, SET_START_PRICE, SET_NO_PEOPLE,\nSET_ALL_EMPTY\n} from './types';\nimport CalculatorContext from './CalculatorContext';\nimport CalculatorReducer from './CalculatorReducer';\n\nconst CalculatorState = props => {\n    const initStates = {\n        totalEach: 0,\n        tipEach: 0,\n        tipPercent: 0,\n        people: null,\n        startPrice: null,\n        isEmpty: true,\n        noPeople: null\n    }\n\n    const [state, dispatch] = useReducer(CalculatorReducer, initStates);\n\n    function setNoPeople(setBool) {\n        dispatch({\n            type: SET_NO_PEOPLE,\n            payload: setBool\n        })\n    }\n    function setTotalEach(totalEach) {\n        dispatch({\n            type: SET_TOTAL_PER,\n            payload: totalEach\n        })\n    }\n    function setTipPercent(percent) {\n        dispatch({\n            type: SET_TOTAL_TIP,\n            payload: percent\n        })\n    }\n    function setTipEach(tipEach) {\n        dispatch({\n            type: SET_TIP_PER,\n            payload: tipEach\n        })\n    }\n    function setEmpty(setBool) {\n        dispatch({\n            type: SET_ALL_EMPTY,\n            payload: setBool\n        })\n    }\n    function setPeople(newPeople) {\n        if(newPeople > 0) {\n            setNoPeople(false);\n        }\n        dispatch({\n            type: SET_PEOPLE_NUM,\n            payload: newPeople\n        })\n    }\n    function setStartPrice(price) {\n        dispatch({\n            type: SET_START_PRICE,\n            payload: price\n        })\n    } \n    // Checks people state\n    function checkError() {\n        if(state.people === null) {\n            setNoPeople(null)\n        } else if(state.people <= 0) {\n            setNoPeople(true)\n        } else {\n            setNoPeople(false)\n        }\n    }\n\n    // Checks is form is filled\n    // If form filled \n    function checkForm() {\n        if((state.people !== '' && state.people > 0) && \n        (state.startPrice !== '' && state.startPrice > 0) &&\n        (state.tipPercent > 0)) {\n            // Generates total $ per person\n          var totalPer = (state.startPrice * Number(state.tipPercent / 100) + state.startPrice) / state.people;\n          setTotalEach(totalPer);\n    \n          // Generates tip $ per person\n          var tipEach = (state.startPrice * Number(state.tipPercent / 100) / state.people);\n          setTipEach(tipEach);\n        }\n    }\n\n    function handleTipPercent(event) {\n        setTipPercent(event.target.value);\n        checkForm();\n        setEmpty(false);\n    }\n    function handlePeople(e) {\n        setPeople(Number(e.target.value));\n        setEmpty(false);\n        checkError();\n        checkForm();\n    }\n    function handleStartPrice(e) {\n        setStartPrice(Number(e.target.value));\n        setEmpty(false);\n        checkForm();\n    }\n\n    return (\n        <CalculatorContext.Provider\n            value={{\n                totalEach: state.totalEach,\n                tipEach: state.tipEach,\n                tipPercent: state.tipPercent,\n                people: state.people,\n                startPrice: state.startPrice,\n                isEmpty: state.isEmpty,\n                setTipPercent: state.setTipPercent,\n                noPeople: state.noPeople,\n                handleTipPercent: handleTipPercent,\n                handlePeople: handlePeople,\n                handleStartPrice: handleStartPrice,\n                checkForm: checkForm,\n                checkError: checkError\n            }}\n        >\n            {props.children}\n        </CalculatorContext.Provider>\n    )\n}\n\nexport default CalculatorState;"]},"metadata":{},"sourceType":"module"}